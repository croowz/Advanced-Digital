////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : mux4_7bit_sch.vf
// /___/   /\     Timestamp : 01/19/2018 15:25:03
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog F:/Digital2/ToyProcessor2/mux4_7bit_sch.vf -w C:/Users/zad65674/Downloads/seven_seg_controller/mux4_7bit_sch.sch
//Design Name: mux4_7bit_sch
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module mux4_sch_MUSER_mux4_7bit_sch(c0, 
                                    c1, 
                                    in0, 
                                    in1, 
                                    in2, 
                                    in3, 
                                    mux_out);

    input c0;
    input c1;
    input in0;
    input in1;
    input in2;
    input in3;
   output mux_out;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   
   AND3  XLXI_1 (.I0(XLXN_6), 
                .I1(XLXN_7), 
                .I2(in0), 
                .O(XLXN_1));
   AND3  XLXI_2 (.I0(c0), 
                .I1(XLXN_7), 
                .I2(in1), 
                .O(XLXN_2));
   AND3  XLXI_3 (.I0(XLXN_6), 
                .I1(c1), 
                .I2(in2), 
                .O(XLXN_4));
   AND3  XLXI_4 (.I0(c0), 
                .I1(c1), 
                .I2(in3), 
                .O(XLXN_5));
   OR4  XLXI_5 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(mux_out));
   INV  XLXI_6 (.I(c0), 
               .O(XLXN_6));
   INV  XLXI_7 (.I(c1), 
               .O(XLXN_7));
endmodule
`timescale 1ns / 1ps

module mux4_7bit_sch(c0, 
                     c1, 
                     in0, 
                     in1, 
                     in2, 
                     in3, 
                     mux_out);

    input c0;
    input c1;
    input [6:0] in0;
    input [6:0] in1;
    input [6:0] in2;
    input [6:0] in3;
   output [6:0] mux_out;
   
   
   mux4_sch_MUSER_mux4_7bit_sch  XLXI_1 (.c0(c0), 
                                        .c1(c1), 
                                        .in0(in0[5]), 
                                        .in1(in1[5]), 
                                        .in2(in2[5]), 
                                        .in3(in3[5]), 
                                        .mux_out(mux_out[5]));
   mux4_sch_MUSER_mux4_7bit_sch  XLXI_2 (.c0(c0), 
                                        .c1(c1), 
                                        .in0(in0[6]), 
                                        .in1(in1[6]), 
                                        .in2(in2[6]), 
                                        .in3(in3[6]), 
                                        .mux_out(mux_out[6]));
   mux4_sch_MUSER_mux4_7bit_sch  XLXI_3 (.c0(c0), 
                                        .c1(c1), 
                                        .in0(in0[3]), 
                                        .in1(in1[3]), 
                                        .in2(in2[3]), 
                                        .in3(in3[3]), 
                                        .mux_out(mux_out[3]));
   mux4_sch_MUSER_mux4_7bit_sch  XLXI_4 (.c0(c0), 
                                        .c1(c1), 
                                        .in0(in0[4]), 
                                        .in1(in1[4]), 
                                        .in2(in2[4]), 
                                        .in3(in3[4]), 
                                        .mux_out(mux_out[4]));
   mux4_sch_MUSER_mux4_7bit_sch  XLXI_5 (.c0(c0), 
                                        .c1(c1), 
                                        .in0(in0[1]), 
                                        .in1(in1[1]), 
                                        .in2(in2[1]), 
                                        .in3(in3[1]), 
                                        .mux_out(mux_out[1]));
   mux4_sch_MUSER_mux4_7bit_sch  XLXI_6 (.c0(c0), 
                                        .c1(c1), 
                                        .in0(in0[2]), 
                                        .in1(in1[2]), 
                                        .in2(in2[2]), 
                                        .in3(in3[2]), 
                                        .mux_out(mux_out[2]));
   mux4_sch_MUSER_mux4_7bit_sch  XLXI_7 (.c0(c0), 
                                        .c1(c1), 
                                        .in0(in0[0]), 
                                        .in1(in1[0]), 
                                        .in2(in2[0]), 
                                        .in3(in3[0]), 
                                        .mux_out(mux_out[0]));
endmodule
