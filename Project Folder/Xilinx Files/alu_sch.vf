////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : alu_sch.vf
// /___/   /\     Timestamp : 02/19/2018 13:38:11
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog "C:/Users/rac71636/Documents/GitHub/Advanced-Digital/Project Folder/Xilinx Files/alu_sch.vf" -w "C:/Users/rac71636/Documents/GitHub/Advanced-Digital/Project Folder/Xilinx Files/alu_sch.sch"
//Design Name: alu_sch
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module fa_sch_MUSER_alu_sch(Cprev, 
                            X, 
                            Y, 
                            Cnext, 
                            RES);

    input Cprev;
    input X;
    input Y;
   output Cnext;
   output RES;
   
   wire XLXN_1;
   wire XLXN_6;
   wire XLXN_7;
   
   XOR2  XLXI_3 (.I0(Y), 
                .I1(X), 
                .O(XLXN_1));
   XOR2  XLXI_4 (.I0(Cprev), 
                .I1(XLXN_1), 
                .O(RES));
   OR2  XLXI_5 (.I0(XLXN_7), 
               .I1(XLXN_6), 
               .O(Cnext));
   AND2  XLXI_6 (.I0(XLXN_1), 
                .I1(Cprev), 
                .O(XLXN_6));
   AND2  XLXI_7 (.I0(X), 
                .I1(Y), 
                .O(XLXN_7));
endmodule
`timescale 1ns / 1ps

module alu_sch(SEL, 
               X, 
               Y, 
               Cnext, 
               DATA_OUT);

    input SEL;
    input [7:0] X;
    input [7:0] Y;
   output Cnext;
   output [7:0] DATA_OUT;
   
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   
   fa_sch_MUSER_alu_sch  XLXI_1 (.Cprev(XLXN_33), 
                                .X(X[5]), 
                                .Y(XLXN_59), 
                                .Cnext(XLXN_34), 
                                .RES(DATA_OUT[5]));
   fa_sch_MUSER_alu_sch  XLXI_3 (.Cprev(XLXN_32), 
                                .X(X[6]), 
                                .Y(XLXN_58), 
                                .Cnext(XLXN_33), 
                                .RES(DATA_OUT[6]));
   fa_sch_MUSER_alu_sch  XLXI_4 (.Cprev(SEL), 
                                .X(X[7]), 
                                .Y(XLXN_57), 
                                .Cnext(XLXN_32), 
                                .RES(DATA_OUT[7]));
   fa_sch_MUSER_alu_sch  XLXI_5 (.Cprev(XLXN_34), 
                                .X(X[4]), 
                                .Y(XLXN_60), 
                                .Cnext(XLXN_35), 
                                .RES(DATA_OUT[4]));
   fa_sch_MUSER_alu_sch  XLXI_6 (.Cprev(XLXN_35), 
                                .X(X[3]), 
                                .Y(XLXN_61), 
                                .Cnext(XLXN_36), 
                                .RES(DATA_OUT[3]));
   fa_sch_MUSER_alu_sch  XLXI_7 (.Cprev(XLXN_36), 
                                .X(X[2]), 
                                .Y(XLXN_62), 
                                .Cnext(XLXN_37), 
                                .RES(DATA_OUT[2]));
   fa_sch_MUSER_alu_sch  XLXI_8 (.Cprev(XLXN_37), 
                                .X(X[1]), 
                                .Y(XLXN_63), 
                                .Cnext(XLXN_38), 
                                .RES(DATA_OUT[1]));
   fa_sch_MUSER_alu_sch  XLXI_9 (.Cprev(XLXN_38), 
                                .X(X[0]), 
                                .Y(XLXN_64), 
                                .Cnext(Cnext), 
                                .RES(DATA_OUT[0]));
   XOR2  XLXI_10 (.I0(SEL), 
                 .I1(Y[7]), 
                 .O(XLXN_57));
   XOR2  XLXI_11 (.I0(SEL), 
                 .I1(Y[6]), 
                 .O(XLXN_58));
   XOR2  XLXI_12 (.I0(SEL), 
                 .I1(Y[5]), 
                 .O(XLXN_59));
   XOR2  XLXI_13 (.I0(SEL), 
                 .I1(Y[4]), 
                 .O(XLXN_60));
   XOR2  XLXI_14 (.I0(SEL), 
                 .I1(Y[3]), 
                 .O(XLXN_61));
   XOR2  XLXI_15 (.I0(SEL), 
                 .I1(Y[2]), 
                 .O(XLXN_62));
   XOR2  XLXI_16 (.I0(SEL), 
                 .I1(Y[1]), 
                 .O(XLXN_63));
   XOR2  XLXI_18 (.I0(SEL), 
                 .I1(Y[0]), 
                 .O(XLXN_64));
endmodule
